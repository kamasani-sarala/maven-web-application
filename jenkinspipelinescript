pipeline
{
agent any
tools{
maven "maven3.8.4"
}
triggers {
  pollSCM '* * * * *'
}
options {
//Discard old Build
  buildDiscarder logRotator(artifactDaysToKeepStr: '', artifactNumToKeepStr: '5', daysToKeepStr: '', numToKeepStr: '5')
//adding the timestamps to the console output
timestamps()
}

stages{
//checkout code stage
stage('checkoutcode')
{
steps{
    sendSlackNotifications('STARTED')
git branch: 'development', credentialsId: 'e9e06cdc-b22e-4eb6-99d1-b66270e889e2', url: 'https://github.com/kamasani-sarala/maven-web-application.git'
}
}
//Build stage
stage('Build')
{
steps{
sh "mvn clean package"
}
}
//Execute sonarQube Report
stage('ExecuteSonarQubeReport'){
steps{
sh"mvn sonar:sonar"
}
}
//upload artifacts into artifactory repo
stage('UploadIntoNexus')
{
steps{
sh "mvn deploy"
}
}
stage('DeployAppintoTomcatServer'){
steps{
sshagent(['94298990-9eb3-4f25-9409-8eb7dc761e4d']) {
sh "scp -o StrictHostKeyChecking=no target/maven-web-application.war ec2-user@172.31.42.160:/opt/apache-tomcat-9.0.63/webapps"
}
}
}
}//stages closing
post {
  success {
    sendSlackNotifications('SUCCESS')
 
  }
  failure {
       sendSlackNotifications('FAILURE')
  }
}
}//pipeline closing
def sendSlackNotifications(String buildStatus = 'STARTED') {
  // build status of null means successful
  buildStatus =  buildStatus ?: 'SUCCESSFUL'

  // Default values
  def colorName = 'RED'
  def colorCode = '#FF0000'
  def subject = "${buildStatus}: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]'"
  def summary = "${subject} (${env.BUILD_URL})"

  // Override default values based on build status
  if (buildStatus == 'STARTED') {
    color = 'YELLOW'
    colorCode = '#FFFF00'
  } else if (buildStatus == 'SUCCESSFUL') {
    color = 'GREEN'
    colorCode = '#00FF00'
  } else {
    color = 'RED'
    colorCode = '#FF0000'
  }

  // Send notifications
  slackSend (color: colorCode, message: summary, channel : 'walmart')
}
 



