node{
    
def mavenHome = tool name: "maven3.8.4"
properties([buildDiscarder(logRotator(artifactDaysToKeepStr: '', artifactNumToKeepStr: '5', daysToKeepStr: '', numToKeepStr: '5')), [$class: 'JobLocalConfiguration', changeReasonComment: ''], pipelineTriggers([pollSCM('* * * * *')])])
 echo " Job name is :${env.job_name}" 
 echo " Node name is :${env.node_name}" 
 echo " Build number is :${env.Build_Number}"
 try{
 sendSlackNotifications('STARTED')
 stage('CheckoutCpode')
{
    git branch: 'development', credentialsId: 'e9e06cdc-b22e-4eb6-99d1-b66270e889e2', url: 'https://github.com/kamasani-sarala/maven-web-application.git'
}
stage('Build')
{
    sh "${mavenHome}/bin/mvn clean package"
}
/*
stage('ExecuteSonarQubeReport')
{
sh "${mavenHome}/bin/mvn sonar:sonar"
}

stage('UploadArtifactsIntoNexus')
{
sh "${mavenHome}/bin/mvn deploy"
}
stage('deployAppIntoTomcatServer')
{
sshagent(['94298990-9eb3-4f25-9409-8eb7dc761e4d']) {
sh "scp -o StrictHostKeyChecking=no target/maven-web-application.war ec2-user@172.31.42.160:/opt/apache-tomcat-9.0.63/webapps"
}
}
*/
}catch(e){
currentBuild.result = "FAILED"
    throw e
    }
    finally{
    sendSlackNotifications(currentbuild.result)
}
}//node closing

//below code is used for slack notifications
def sendSlackNotifications(String buildStatus = 'STARTED') {
  
  buildStatus =  buildStatus ?: 'SUCCESSFUL'

  // Default values
  def colorName = 'RED'
  def colorCode = '#FF0000'
  def subject = "${buildStatus}: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]'"
  def summary = "${subject} (${env.BUILD_URL})"

  // Override default values based on build status
  if (buildStatus == 'STARTED') {
    color = 'YELLOW'
    colorCode = '#FFFF00'
  } else if (buildStatus == 'SUCCESSFUL') {
    color = 'GREEN'
    colorCode = '#00FF00'
  } else {
    color = 'RED'
    colorCode = '#FF0000'
  }

  // Send notifications
  slackSend (color: colorCode, message: summary, channel : 'walmart')
}
